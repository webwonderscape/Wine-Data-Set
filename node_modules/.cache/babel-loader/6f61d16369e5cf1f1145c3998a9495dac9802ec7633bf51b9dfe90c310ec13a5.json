{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react\\\\winedataset\\\\myapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Context from './components/Context/Context';\nimport UtilityCalculations from './components/UtilityCalculations';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State to store the data fetched from 'data.json'\n  const [data, setData] = useState([]);\n  // Function to fetch data from 'data.json' and update the state\n  const getData = () => {\n    fetch('data.json', {\n      headers: {\n        'content-type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(myjson => {\n      setData(myjson);\n    });\n  };\n\n  // Fetch data on component mount using useEffect\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: data,\n    children: /*#__PURE__*/_jsxDEV(UtilityCalculations, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Context","UtilityCalculations","jsxDEV","_jsxDEV","App","_s","data","setData","getData","fetch","headers","then","response","json","myjson","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/react/winedataset/myapp/src/App.js"],"sourcesContent":["import React, {useEffect,useState} from 'react'\nimport Context from './components/Context/Context'\nimport UtilityCalculations from './components/UtilityCalculations'\nimport './App.css';\n\nconst App = ()=> {\n  // State to store the data fetched from 'data.json'\n  const [data, setData] = useState([])\n  // Function to fetch data from 'data.json' and update the state\n  const getData=()=>{\n    fetch('data.json',{headers:{\n      'content-type':'application/json',\n      'Accept':'application/json'\n    }}).then((response)=>{\n      return response.json()\n    }).then((myjson)=>{\n      setData(myjson)\n    })\n  }\n\n  // Fetch data on component mount using useEffect\n  useEffect(()=>{\n    getData()\n  }, [])\n\nreturn(\n  <Context.Provider value={data}>    \n    <UtilityCalculations/>\n  </Context.Provider>\n)\n\n}\nexport default App\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAACC,QAAQ,QAAO,OAAO;AAC/C,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,mBAAmB,MAAM,kCAAkC;AAClE,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACf;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC;EACA,MAAMS,OAAO,GAACA,CAAA,KAAI;IAChBC,KAAK,CAAC,WAAW,EAAC;MAACC,OAAO,EAAC;QACzB,cAAc,EAAC,kBAAkB;QACjC,QAAQ,EAAC;MACX;IAAC,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAG;MACnB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CAACF,IAAI,CAAEG,MAAM,IAAG;MAChBP,OAAO,CAACO,MAAM,CAAC;IACjB,CAAC,CAAC;EACJ,CAAC;;EAED;EACAhB,SAAS,CAAC,MAAI;IACZU,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAER,oBACEL,OAAA,CAACH,OAAO,CAACe,QAAQ;IAACC,KAAK,EAAEV,IAAK;IAAAW,QAAA,eAC5Bd,OAAA,CAACF,mBAAmB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGrB,CAAC;AAAAhB,EAAA,CA1BKD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA2BT,eAAeA,GAAG;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}